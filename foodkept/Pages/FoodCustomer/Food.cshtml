@page
@model FoodKept.Pages.FoodModel
@{
    ViewData["Title"] = "Food";
}
@Html.AntiForgeryToken()

<div class="container container_mt">
    <form class="form-inline" asp-page="./Food" method="get">
        <p>
            Food Name: <input class="form-control" type="text" name="SearchString" value="@Model.CurrentFilter" />
            <select asp-for="CurrentCategory" asp-items="Model.FoodCategory" class="form-control"></select>
            <input class="btn btn-dark pl-3 pr-3 mt-0 mb-0" type="submit" value="Filter" />
        </p>
    </form>

    <table class="table" id="foodTable">
        <thead>
            <tr>
                <th>
                    <a class="text-dark" asp-page="./Food" asp-route-sortOrder="@Model.NameSort"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        @Html.DisplayNameFor(model => model.Food[0].FoodName)
                    </a>
                </th>
                <th>
                    <a class="text-dark" asp-page="./Food" asp-route-sortOrder="@Model.RestaurantSort"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        Restaurant
                    </a>
                </th>
                <th>
                    <a class="text-dark" asp-page="./Food" asp-route-sortOrder="@Model.PriceSort"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        @Html.DisplayNameFor(model => model.Food[0].Price)
                    </a>
                </th>
                <th>
                    <a class="text-dark" asp-page="./Food" asp-route-sortOrder="@Model.DiscountSort"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        Discount
                    </a>
                </th>
                <th>
                    <a class="text-dark" asp-page="./Food" asp-route-sortOrder="@Model.QuantitySort"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        @Html.DisplayNameFor(model => model.Food[0].Quantity)
                    </a>
                </th>
                <th>
                    <a class="text-dark" asp-page="./Food" asp-route-sortOrder="@Model.FoodCategorySort"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        Food Category
                    </a>
                </th>
                <th>
                    Food Image
                </th>
                <th>
                    Details
                </th>
                <th>
                    Add to Cart
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var food in Model.Food)
            {
                @if (food.Quantity == 0) continue;
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => food.FoodName) <br />
                        <img src="/images/EmptyStar.png" alt="Star Rating" align="middle" id="1" class="rating" mid="@food.ID" />
                        <img src="/images/EmptyStar.png" alt="Star Rating" align="middle" id="2" class="rating" mid="@food.ID" />
                        <img src="/images/EmptyStar.png" alt="Star Rating" align="middle" id="3" class="rating" mid="@food.ID" />
                        <img src="/images/EmptyStar.png" alt="Star Rating" align="middle" id="4" class="rating" mid="@food.ID" />
                        <img src="/images/EmptyStar.png" alt="Star Rating" align="middle" id="5" class="rating" mid="@food.ID" />
                        @if (food.Ratings != null)
                        {
                            <span> (@food.Ratings.Count) </span>
                            @if (food.Ratings.Count > 0)
                                { decimal a = food.Ratings.Sum(m => m.Rate) / food.RateCount; <span class="avr"> @a</span> } <br />
                        }
                        <div class="result"></div>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => food.ApplicationUser.RestaurantName)
                    </td>
                    <td>
                        @if (food.CurrentPrice.IsDiscount)
                        {
                            <span class="oldPrice">
                                @food.CurrentPrice.OldPrice&euro;
                            </span>
                            <span class="newPrice ml-2">
                                @food.CurrentPrice.DiscountPrice&euro;
                            </span>
                        }
                        else
                        {
                            <span>
                                @food.Price&euro;
                            </span>
                        }
                    </td>
                    <td>
                        @if (food.CurrentPrice.IsDiscount)
                        {
                            <span>
                                @food.CurrentPrice.DiscountPercent %
                            </span>
                        }
                        else
                        {
                            <span>
                                None
                            </span>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => food.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => food.FoodCategory)
                    </td>
                    <td>
                        @if (food.FoodImage != null)
                        {
                            <img src="data:image/jpg/png;base64,@System.Convert.ToBase64String(food.FoodImage)" width="100" height="100" />
                        }
                    </td>
                    <td>
                        <a class="btn btn-light" asp-page="./Details" asp-route-id="@food.ID">Details</a>
                    </td>
                    <td>
                        <button type="button" class="btn btn-dark text-light" id="addToCart" onclick="addToCart(@food.ID)" value="@food.ID">Add to Cart</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.Food.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Food.HasNextPage ? "disabled" : "";
    }

    <a asp-page="./Food"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Food.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-currentCategory="@Model.CurrentCategory"
       class="btn btn-dark text-light @prevDisabled">
        Previous
    </a>
    <a asp-page="./Food"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Food.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-currentCategory="@Model.CurrentCategory"
       class="btn btn-dark text-light @nextDisabled">
        Next
    </a>
</div>

<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script type="text/javascript">
    function addToCart(id) {
        $.ajax({
            type: "POST",
            url: "/FoodCustomer/Cart?handler=AddToCart",
            beforeSend: function (xhr) {
                xhr.setRequestHeader("XSRF-TOKEN",
                    $('input:hidden[name="__RequestVerificationToken"]').val());
            },
            data: { "id": new String(id) },
            success: function (response) {
                alert("Added to Cart " + response);
            },
            error: function (error) {
                alert("error " + error);
            }
        })
    }

    $(function () {

        $("img.rating").mouseover(function () {
            giveRating($(this), "FilledStar.png");
            $(this).css("cursor", "pointer");
        });

        $("img.rating").mouseout(function () {
            giveRating($(this), "EmptyStar.png");
            refilRating($(this));
        });

        $('#foodTable > tbody  > tr').each(function () {
            var av = $(this).find("span.avr").text();
            if (av != "" || av != null)
            {
                // alert(av)
                // fillRating(parseInt(av));
                var img = $(this).find("img[id='" + parseInt(av) + "']");
                img.attr("src", "/images/FilledStar.png").prevAll("img.rating").attr("src", "/images/FilledStar.png");
            }
        });


        $("img.rating").click(function (e) {
            $(this).css('color', 'red');
            $.ajax({
                type: "POST",
                url: "/FoodCustomer/Details?handler=Rating",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: { "id": parseInt($(this).attr("id")), "fid": parseInt($(this).attr("mid")) },
                success: function (response) {
                    alert("Rated. " + response);
                    $(e.currentTarget).closest('tr').find('div.result').text(data).css('color', 'red');
                    $("#result").text(data);
                },
                error: function (error) {
                    alert("error " + error);
                }
            })
        });
    });

    function giveRating(img, image) {
        img.attr("src", "/Images/" + image)
            .prevAll("img.rating").attr("src", "/Images/" + image);
    }

    function refilRating(img1)
    {
        var rt = $(img1).closest('tr').find("span.avr").text();
        var img = $(img1).closest('tr').find("img[id='" + parseInt(rt) + "']");
        img.attr("src", "/images/FilledStar.png").prevAll("img.rating").attr("src", "/images/FilledStar.png");
    }

</script>
