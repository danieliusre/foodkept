@page
@model FoodKept.Pages.FoodPages.IndexModel
@using FoodKept.Models

@{
    ViewData["Title"] = "Index";
}

<div class="container container_mt">
    <h1>Your Food List</h1>
    <!--Markup to add search field on the page-->
    <form class="form-inline" asp-page="./Index" method="get">
        <p>
            Food Name: <input class="form-control" type="text" name="SearchString" value="@Model.CurrentFilter" />
            <select asp-for="CurrentCategory" asp-items="Model.FoodCategory" class="form-control"></select>
            <input class="btn btn-dark pl-3 pr-3 mt-0 mb-0" type="submit" value="Filter" />
        </p>
    </form>

    <!--end of the form markup-->

    <p>
        <a asp-page="Create">Create New</a>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a class="text-dark" asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                       asp-route-currentFilter="@Model.CurrentFilter"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        @Html.DisplayNameFor(model => model.Food[0].FoodName)
                    </a>
                </th>
                <th>
                    <a class="text-dark" asp-page="./Index" asp-route-sortOrder="@Model.PriceSort"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        @Html.DisplayNameFor(model => model.Food[0].Price)
                    </a>
                </th>
                <th>
                    <a class="text-dark" asp-page="./Index" asp-route-sortOrder="@Model.DiscountSort"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        Discount
                    </a>
                </th>
                <th>
                    <a class="text-dark" asp-page="./Index" asp-route-sortOrder="@Model.QuantitySort"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        @Html.DisplayNameFor(model => model.Food[0].Quantity)
                    </a>
                </th>
                <th>
                    <a class="text-dark" asp-page="./Index" asp-route-sortOrder="@Model.FoodCategorySort"
                       asp-route-currentCategory="@Model.CurrentCategory">
                        Food Category
                    </a>
                </th>
                <th>
                    Food Image
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Food)
            {

                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FoodName)
                    </td>
                    <td>
                        @if (item.CurrentPrice.IsDiscount)
                        {
                            <span class="oldPrice">
                                @item.CurrentPrice.OldPrice&euro;
                            </span>
                            <span class="newPrice ml-2">
                                @item.CurrentPrice.DiscountPrice&euro;
                            </span>
                        }
                        else
                        {
                            <span>
                                @item.Price&euro;
                            </span>
                        }
                    </td>
                    <td>
                        @if (item.CurrentPrice.IsDiscount)
                        {
                            <span>
                                @item.CurrentPrice.DiscountPercent %
                            </span>
                        }
                        else
                        {
                            <span>
                                None
                            </span>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FoodCategory)
                    </td>
                    <td>
                        @if (item.FoodImage != null)
                        {
                            <img src="data:image/jpg/png;base64,@System.Convert.ToBase64String(item.FoodImage)" width="80" height="80" />
                        }
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-page="/DiscountPages/Index" asp-route-id="@item.ID">Discounts</a> |
                        <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    @{
        var prevDisabled = !Model.Food.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.Food.HasNextPage ? "disabled" : "";
    }

    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Food.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-currentCategory="@Model.CurrentCategory"
       class="btn btn-dark text-light @prevDisabled">
        Previous
    </a>
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Food.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       asp-route-currentCategory="@Model.CurrentCategory"
       class="btn btn-dark text-light @nextDisabled">
        Next
    </a>
</div>
